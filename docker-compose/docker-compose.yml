version: "3.8"

networks:
  monitoring:

volumes:
  prometheus_data: {}
  elasticsearch:

services:
  prometheus:
    image: prom/prometheus:v2.25.0
    container_name: prometheus
    restart: always
    volumes:
      - ./prometheus_conf/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      monitoring:

  grafana:
    image: grafana/grafana:7.3.7
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - "./grafana_conf/provisioning:/etc/grafana/provisioning"
      - "./grafana_conf/dashboards:/var/lib/grafana/dashboards"
      - "./grafana_conf/config/grafana.ini:/etc/grafana/grafana.ini"
    networks:
      monitoring:

  ## kafka
  zookeeper:
    container_name: zookeeper
    image: bitnami/zookeeper:3.6.0
    restart: unless-stopped
    ports:
      - "2181:2181"
    networks:
      - monitoring
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"

  kafka:
    container_name: kafka
    image: bitnami/kafka:2.8.1
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: "zookeeper:2181"
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_CFG_ADVERTISED_LISTENERS: "CLIENT://kafka:9093,EXTERNAL://127.0.0.1:9092"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_CFG_LISTENERS: "CLIENT://:9093,EXTERNAL://:9092"
      KAFKA_INTER_BROKER_LISTENER_NAME: "CLIENT"
      KAFKA_CFG_MAX_REQUEST_SIZE: "104857600"
      KAFKA_CFG_LOG_RETENTION_HOURS: 1
    restart: unless-stopped
    ports:
      - "9093:9093"
      - "9092:9092"
    depends_on:
      - zookeeper
    networks:
      - monitoring

  ## elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.2
    container_name: elasticsearch
    restart: always
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,z
      - /etc/localtime:/etc/localtime
      - elasticsearch:/usr/share/elasticsearch/data:z
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - monitoring
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: fLw2oW32Cbj4oAzUXkim

  kibana:
    image: docker.elastic.co/kibana/kibana:7.4.2
    container_name: kibana
    restart: always
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,z
      - /etc/localtime:/etc/localtime
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    networks:
      - monitoring

  logstash:
    image: docker.elastic.co/logstash/logstash:7.4.2
    container_name: logstach
    restart: always
    tty: true
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,z
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro,z
      - /etc/localtime:/etc/localtime
    networks:
      - monitoring
    depends_on:
      - elasticsearch
      - kafka
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"